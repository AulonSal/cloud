---
- hosts: aws-setup
  become: true


  vars_files:
    - vars/default.yaml
    - vars/secrets.yaml
    - vars/steward.yaml

  tasks:
    # Basic Setup
    - name: Set timezone
      community.general.timezone:
        name: "{{ timezone }}"

    - name: Upgrade system
      pacman:
        upgrade: true
        update_cache: true
      register: system_update

    - name: Reboot system if updated
      reboot:
      when: system_update.changed

    - name: Install Packages
      pacman:
        name: "{{ sys_packages }}"
        state: latest

    # User Setup
    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        # line: '%wheel ALL=(ALL) ALL'
        insertafter: '## Uncomment to allow members of group wheel to execute any command'
        validate: '/usr/sbin/visudo -cf %s'

    - name: Create a new regular user with sudo privileges
      user:
        name: "{{ sudo_user }}"
        state: present
        groups: wheel
        append: true
        create_home: true
        shell: /bin/zsh

    - name: Allow groups to execute in home directory
      ansible.builtin.file:
        path: "/home/{{ sudo_user }}"
        state: directory
        mode: '0710'

    - name: "Have arch's shell be zsh"
      user:
        name: "{{ initial_user }}"
        state: present
        shell: /bin/zsh

    - name: Set authorized key for remote user
      authorized_key:
        user: "{{ sudo_user }}"
        state: present
        key: "{{ copy_local_key }}"

    - name: Copy zshrc for all non-root users
      ansible.builtin.copy:
        backup: yes
        dest: "/home/{{ item }}/.zshrc"
        src: "{{ files_directory }}/zshrc"
        group: "{{ item }}"
        owner: "{{ item }}"
        mode:  0644
        # loop: "{{ all_users }}"
        # Try https://stackoverflow.com/questions/33343215/how-to-get-an-arbitrary-remote-users-home-directory-in-ansible
      loop:
        - "{{ sudo_user }}"
        - "{{ initial_user }}"

    - name: Copy gitconfig
      ansible.builtin.copy:
        dest: "/home/{{ sudo_user }}/.gitconfig"
        src: "{{ files_directory }}/gitconfig"
        group: "{{ sudo_user }}"
        owner: "{{ sudo_user }}"
        mode:  0644

    - name: Copy kitty terminfo to server
      ansible.builtin.copy:
        dest: "{{ terminfo_directory }}"
        src: '/usr/lib/kitty/terminfo/'
        group: 'root'
        owner: 'root'
        mode:  'preserve'

    - name: Copy ssh keys to server
      ansible.builtin.copy:
        dest: "{{ ssh_home }}/"
        src: '{{ item }}'
        group: '{{ sudo_user }}'
        owner: '{{ sudo_user }}'
        mode:  'preserve'
      loop: "{{ ssh_files }}"

    # - name: Disable password authentication for root
    #   lineinfile:
    #     path: /etc/ssh/sshd_config
    #     state: present
    #     regexp: '^#?PermitRootLogin'
    #     line: 'PermitRootLogin prohibit-password'

