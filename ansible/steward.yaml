# Deployment of steward
---
- hosts: aws-deploy
  become: false
  vars_files:
    - vars/default.yaml
    - vars/steward.yaml
    - vars/secrets.yaml

  tasks:
    - name: Install packages
      become: true
      pacman: name={{ packages }} state=latest

    - name: Checkout steward
      ansible.builtin.git:
        repo: "{{ git_uri }}"
        dest: '~/steward-fastapi'
        accept_hostkey: true
      tags:
        - steward_setup

    - name: Copy custom aerich to server
      ansible.builtin.copy:
        dest: "{{ steward_directory }}"
        src: "{{ python_distributables_directory }}"
        group: "{{ sudo_user }}"
        owner: "{{ sudo_user }}"
        mode:  'preserve'
      tags:
        - steward_setup

    - name: Copy steward prod only directory contents
      ansible.posix.synchronize:
        checksum: true
        dest: "{{ steward_working_directory }}"
        src: 'configs/steward/'
      tags:
        - steward_setup

    - name: Create project instance dir
      ansible.builtin.file:
        path: "{{ steward_directory }}/instance"
        state: directory
        mode: '0755'
      tags:
        - steward_setup

    - name: Install poetry environment
      ansible.builtin.command:
        chdir: "{{ steward_directory }}"
        cmd: 'poetry install --no-dev'
      tags:
        - steward_setup

    - name: Copy caddy config
      become: true
      ansible.builtin.copy:
        backup: yes
        dest: '/etc/caddy/Caddyfile'
        src: 'configs/Caddyfile'
        group: 'root'
        owner: 'root'
        mode:  0644
      tags:
        - caddy

    - name: Add caddy to group sudo_user
      become: true
      user:
        name: caddy
        state: present
        groups: "{{ sudo_user }}"
        append: true
      tags:
        - caddy

    # In the future, create a systemd service to create a dir in run on boot for the application
    - name: Copy services
      become: true
      ansible.posix.synchronize:
        checksum: true
        dest: '/etc/systemd/system'
        src: 'configs/systemd/'
      tags:
        - caddy

    - name: Reload systemd daemon
      become: true
      ansible.builtin.systemd:
        daemon_reload: true
      tags:
        - caddy
        
    - name: Enable webservers
      become: true
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      loop:
        - 'caddy'
        - 'aulon-web'
      tags:
        - caddy

